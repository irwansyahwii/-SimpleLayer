// Generated by CoffeeScript 1.9.2
(function() {
  var BaseClass, ScreenClass,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseClass = require("./BaseClass").BaseClass;

  ScreenClass = (function(superClass) {
    extend(ScreenClass, superClass);

    function ScreenClass() {
      return ScreenClass.__super__.constructor.apply(this, arguments);
    }

    ScreenClass.define("width", {
      get: function() {
        return Framer.CurrentContext.width;
      }
    });

    ScreenClass.define("height", {
      get: function() {
        return Framer.CurrentContext.height;
      }
    });

    ScreenClass.define("size", {
      get: function() {
        return {
          width: this.width,
          height: this.height
        };
      }
    });

    ScreenClass.define("frame", {
      get: function() {
        return {
          x: 0,
          y: 0,
          width: this.width,
          height: this.height
        };
      }
    });

    return ScreenClass;

  })(BaseClass);

  exports.Screen = new ScreenClass;

}).call(this);
