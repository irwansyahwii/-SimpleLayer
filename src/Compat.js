// Generated by CoffeeScript 1.9.2
(function() {
  var CompatImageView, CompatLayer, CompatScrollView, CompatView, Layer, compatProperty, compatWarning,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Layer = require("./Layer").Layer;

  compatWarning = function(msg) {
    return console.warn(msg);
  };

  compatProperty = function(name, originalName) {
    return {
      enumerable: false,
      get: function() {
        compatWarning(originalName + " is a deprecated property");
        return this[name];
      },
      set: function(value) {
        compatWarning(originalName + " is a deprecated property");
        return this[name] = value;
      }
    };
  };

  CompatLayer = (function(superClass) {
    var addSubView, removeSubView;

    extend(CompatLayer, superClass);

    function CompatLayer(options) {
      if (options == null) {
        options = {};
      }
      if (options.hasOwnProperty("superView")) {
        options.superLayer = options.superView;
      }
      CompatLayer.__super__.constructor.call(this, options);
    }

    CompatLayer.define("superView", compatProperty("superLayer", "superView"));

    CompatLayer.define("subViews", compatProperty("subLayers", "subViews"));

    CompatLayer.define("siblingViews", compatProperty("siblingLayers", "siblingViews"));

    addSubView = function(layer) {
      return this.addSubLayer(layer);
    };

    removeSubView = function(layer) {
      return this.removeSubLayer(layer);
    };

    return CompatLayer;

  })(Layer);

  CompatView = (function(superClass) {
    extend(CompatView, superClass);

    function CompatView(options) {
      if (options == null) {
        options = {};
      }
      compatWarning("Views are now called Layers");
      CompatView.__super__.constructor.call(this, options);
    }

    return CompatView;

  })(CompatLayer);

  CompatImageView = (function(superClass) {
    extend(CompatImageView, superClass);

    function CompatImageView() {
      return CompatImageView.__super__.constructor.apply(this, arguments);
    }

    return CompatImageView;

  })(CompatView);

  CompatScrollView = (function(superClass) {
    extend(CompatScrollView, superClass);

    function CompatScrollView() {
      CompatScrollView.__super__.constructor.apply(this, arguments);
      this.scroll = true;
    }

    return CompatScrollView;

  })(CompatView);

  window.Layer = CompatLayer;

  window.Framer.Layer = CompatLayer;

  window.View = CompatView;

  window.ImageView = CompatImageView;

  window.ScrollView = CompatScrollView;

  window.utils = window.Utils;

}).call(this);
