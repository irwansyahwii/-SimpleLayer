// Generated by CoffeeScript 1.9.2
(function() {
  var Layer,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Layer = require("./Layer").Layer;

  "Todo: make it work in a parent layer";

  exports.BackgroundLayer = (function(superClass) {
    extend(BackgroundLayer, superClass);

    function BackgroundLayer(options) {
      if (options == null) {
        options = {};
      }
      this.layout = bind(this.layout, this);
      if (options.backgroundColor == null) {
        options.backgroundColor = "#fff";
      }
      BackgroundLayer.__super__.constructor.call(this, options);
      this.sendToBack();
      this.layout();
      this._context.eventManager.wrap(window).addEventListener("resize", this.layout);
    }

    BackgroundLayer.prototype.layout = function() {
      if (this.superLayer) {
        return this.frame = {
          x: 0,
          y: 0,
          width: this.superLayer.width,
          height: this.superLayer.height
        };
      } else if (this._context._parentLayer) {
        return this.frame = {
          x: 0,
          y: 0,
          width: this._context._parentLayer.width,
          height: this._context._parentLayer.height
        };
      } else {
        return this.frame = {
          x: 0,
          y: 0,
          width: window.innerWidth,
          height: window.innerHeight
        };
      }
    };

    return BackgroundLayer;

  })(Layer);

}).call(this);
