// Generated by CoffeeScript 1.9.2
(function() {
  var AnimationGroup, EventEmitter, _,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require("./Underscore")._;

  EventEmitter = require("./EventEmitter").EventEmitter;

  AnimationGroup = (function(superClass) {
    extend(AnimationGroup, superClass);

    function AnimationGroup(animations) {
      if (animations == null) {
        animations = [];
      }
      this.setAnimations(animations);
      this._currentAnimation = null;
    }

    AnimationGroup.prototype.setAnimations = function(animations) {
      return this._animations = _.map(animations, function(animation) {
        return animation.copy();
      });
    };

    AnimationGroup.prototype.start = function() {
      this.emit("start");
      _.map(this._animations, (function(_this) {
        return function(animation, index) {
          var nextAnimation;
          nextAnimation = _this._animations[index + 1];
          if (nextAnimation) {
            return animation.on(Events.AnimationEnd, function() {
              nextAnimation.start();
              return _this._currentAnimation = animation;
            });
          } else {
            return animation.on(Events.AnimationEnd, function() {
              _this.emit("end");
              return _this._currentAnimation = null;
            });
          }
        };
      })(this));
      return this._animations[0].start();
    };

    AnimationGroup.prototype.stop = function() {
      var ref;
      return (ref = this._currentAnimation) != null ? ref.stop() : void 0;
    };

    return AnimationGroup;

  })(EventEmitter);

}).call(this);
